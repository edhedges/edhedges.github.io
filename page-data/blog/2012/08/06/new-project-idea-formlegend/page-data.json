{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2012/08/06/new-project-idea-formlegend","result":{"data":{"markdownRemark":{"html":"<h4>Introduction to FormLegend</h4>\n<p>I recently started using <a href=\"http://disqus.com/\">disqus</a> to power the comments on my <a href=\"http://jekyllrb.com/\">jekyll</a> powered static website. This got me thinking \"What else could a static website need besides a blog and comments?\". So I compared the features I had on my Django powered site and the only difference is that I had a Contact Form. That is when I came up with the idea for FormLegend.</p>\n<p>There is a project similar to what I will be working on called <a href=\"http://getsimpleform.com/\">simpleform</a>, but I would like FormLegend to be easier to use, more customizable (validation especially), secure, and highly scalable. I am doing this as a way to learn a lot while also providing a useful web service for anyone and everyone for free!</p>\n<h4>Technology Stack</h4>\n<p>I plan to use many open source technologies to make FormLegend. I haven't completely decided which ones, but I have some options before me.</p>\n<p>FormLegend will work in one of two different ways. The first way is how disqus does things which is using cross-domain JavaScript communication and the other way is to use an api token or handle everything on the server side the way simpleform does things. I really like the way that disqus does things and am leaning in that direction.</p>\n<p>Below are the open source libraries I am looking at.</p>\n<h4>Front End Application Components</h4>\n<ul>\n<li><a href=\"http://haml.info/\">Haml</a> or <a href=\"http://ruby-doc.org/stdlib-1.9.3/libdoc/erb/rdoc/ERB.html\">ERB</a> Templating compiling to HTML5</li>\n<li><a href=\"http://sass-lang.com/\">Sass</a> compiling to CSS3</li>\n<li><a href=\"http://coffeescript.org/\">Coffeescript</a> (maybe) compiling to JavaScript or normal JavaScript</li>\n</ul>\n<p>If I do go with cross-domain JavaScript communication I will use one of two libraries:</p>\n<ul>\n<li><a href=\"https://github.com/oyvindkinsey/easyXDM\">easyXDM</a> - Disqus uses this one.</li>\n<li>or</li>\n<li><a href=\"https://github.com/ternarylabs/porthole\">porthole</a></li>\n</ul>\n<h4>Back End Application Components</h4>\n<ul>\n<li><a href=\"http://www.python.org/\">Python</a> along with a web framework and other libraries.</li>\n<li>or</li>\n<li><a href=\"http://www.ruby-lang.org/en/\">Ruby</a> along with a web framework and other libraries.</li>\n</ul>\n<h4>SQL Databases</h4>\n<ul>\n<li><a href=\"http://www.postgresql.org/\">PostgreSQL</a></li>\n<li>or</li>\n<li><a href=\"http://www.mysql.com/\">MySQL</a></li>\n</ul>\n<h4>Key Value Storage for Caching</h4>\n<ul>\n<li><a href=\"http://redis.io/\">Redis</a></li>\n<li>or</li>\n<li><a href=\"http://memcached.org/\">Memcached</a></li>\n<li>Possibly both?</li>\n</ul>\n<p>I have never used any of these components before so I don't really know what to expect. I plan on doing quite a bit of research to allow for FormLegend to be highly scalable.</p>","frontmatter":{"date":"August 06, 2012","path":"/blog/2012/08/06/new-project-idea-formlegend","title":"New project idea \"FormLegend\"","tags":["FormLegend","TechStack","Python","Ruby","easyXDM","porthole","PostgreSQL","MySQL","Redis","Memcached"]}}},"pageContext":{}},"staticQueryHashes":["3128451518","3649515864"]}