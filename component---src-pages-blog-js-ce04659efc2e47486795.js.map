{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-link.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_post_link__WEBPACK_IMPORTED_MODULE_3__","BlogPage","_ref","edges","data","allMarkdownRemark","console","log","JSON","stringify","map","edge","node","frontmatter","tags","a","createElement","title","keywords","key","id","post","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","href","rel","integrity","crossorigin","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","margin","maxWidth","padding","className","display","width","gatsby_browser_entry","to","color","textDecoration","Layout","Fragment","header","paddingTop","textAlign","Date","getFullYear","_755544856","gatsby__WEBPACK_IMPORTED_MODULE_1__","PostLink","path","date"],"mappings":"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","file":"component---src-pages-blog-js-ce04659efc2e47486795.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport PostLink from '../components/post-link'\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  console.log(JSON.stringify(edges.map(edge => edge.node.frontmatter.tags)))\n  return (\n    <Layout>\n      <SEO title=\"Blog\" keywords={[`blog`, `archives`]} />\n      <div>\n        <br />\n        <h2>Blog Archives</h2>\n        <hr />\n      </div>\n      <div>\n        {edges.map(edge => (\n          <PostLink key={edge.node.id} post={edge.node} />\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link\n              href=\"https://fonts.googleapis.com/css?family=Nunito:300,400,700\"\n              rel=\"stylesheet\"\n            />\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\n              integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\n              crossorigin=\"anonymous\"\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `#fff`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1rem 1.0875rem`,\n      }}\n    >\n      <h1\n        className=\"header_h1\"\n        style={{ display: 'inline-block', margin: 0, width: '50%' }}\n      >\n        <Link\n          to=\"/\"\n          style={{\n            color: `#2E404C`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <ul className=\"social_list\">\n        <li>\n          <a href=\"https://github.com/edhedges\">\n            <i className=\"fab fa-github\" />\n          </a>\n        </li>\n        <li>\n          <a href=\"https://stackoverflow.com/users/1165441/edhedges\">\n            <i className=\"fab fa-stack-overflow\" />\n          </a>\n        </li>\n        <li>\n          <a href=\"https://www.linkedin.com/in/eddiehedges\">\n            <i className=\"fab fa-linkedin-in\" />\n          </a>\n        </li>\n        <li>\n          <a href=\"https://twitter.com/Dwedard\">\n            <i className=\"fab fa-twitter\" />\n          </a>\n        </li>\n      </ul>\n      <br />\n      <hr />\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <br />\n          <br />\n          <hr />\n          <footer style={{ textAlign: 'center' }}>\n            © {new Date().getFullYear()}, Built by Eddie Hedges with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            {` `}\n            and hosted on <a href=\"https://pages.github.com/\">GitHub Pages</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>{' '}\n    <div>\n      <small>{post.frontmatter.date}</small>\n    </div>\n    <br />\n  </div>\n)\n\nexport default PostLink\n"],"sourceRoot":""}